{"version":3,"sources":["js/timer.js","index.js"],"names":["refs","body","document","querySelector","secs","start","stop","CountdownTimer","constructor","dd","hh","mm","ss","Math","floor","time","date","Date","console","log","timerId","setInterval","timeactive","parentNode","classList","add","timerTick","setTimeout","timeOutTick","clearTimeout","remove"],"mappings":";;;AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,KAAMF,SAASC,cAAc,uBAC7BE,MAAOH,SAASC,cAAc,yBAC9BG,KAAMJ,SAASC,cAAc,yBAgC/B,MAAMI,EACJC,YAAYC,EAAIC,EAAIC,EAAIC,GAKTC,KAAKC,MAAMC,KAAQ,OAOlBF,KAAKC,MAAOC,KAAQ,MAAyB,MAM9CF,KAAKC,MAAOC,KAAQ,KAAoB,KAMxCF,KAAKC,MAAOC,KAAQ,IAAc,MAGnD,MAAMC,EAAO,IAAIC,KAAK,gBACtBC,QAAQC,IAAIH,GAEZ,MAAMI,EAAUC,YAAYC,EAAY,KAExC,SAASA,IACPtB,EAAKI,KAAKmB,WAAWC,UAAUC,IAAI,eAC7BC,MAAAA,EAAYC,WACTC,WACPC,aAAaH,GACb1B,EAAKI,KAAKmB,WAAWC,UAAUM,OAAO,gBAHE;;ACtE5C,aADA,QAAA,oBACA,QAAA","file":"src.034c95d8.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  body: document.querySelector('body'),\n  secs: document.querySelector('[data-value=\"secs\"]'),\n  start: document.querySelector('[data-action=\"start\"]'),\n  stop: document.querySelector('[data-action=\"stop\"]'),\n};\n\n// new CountdownTimer({\n//   selector: '#timer-1',\n//   targetDate: new Date('Jul 17, 2019'),\n// });\n/*\n * Оставшиеся дни: делим значение UTC на 1000 * 60 * 60 * 24, количество\n * миллисекунд в одном дне (миллисекунды * секунды * минуты * часы)\n */\n// const days = Math.floor(time / (1000 * 60 * 60 * 24));\n\n/*\n * Оставшиеся часы: получаем остаток от предыдущего расчета с помощью оператора\n * остатка % и делим его на количество миллисекунд в одном часе\n * (1000 * 60 * 60 = миллисекунды * минуты * секунды)\n */\n// const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n\n/*\n * Оставшиеся минуты: получаем оставшиеся минуты и делим их на количество\n * миллисекунд в одной минуте (1000 * 60 = миллисекунды * секунды)\n */\n// const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n\n/*\n * Оставшиеся секунды: получаем оставшиеся секунды и делим их на количество\n * миллисекунд в одной секунде (1000)\n */\n// const secs = Math.floor((time % (1000 * 60)) / 1000);\n\nclass CountdownTimer {\n  constructor(dd, hh, mm, ss) {\n    /*\n     * Оставшиеся дни: делим значение UTC на 1000 * 60 * 60 * 24, количество\n     * миллисекунд в одном дне (миллисекунды * секунды * минуты * часы)\n     */\n    const days = Math.floor(time / (1000 * 60 * 60 * 24));\n\n    /*\n     * Оставшиеся часы: получаем остаток от предыдущего расчета с помощью оператора\n     * остатка % и делим его на количество миллисекунд в одном часе\n     * (1000 * 60 * 60 = миллисекунды * минуты * секунды)\n     */\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n\n    /*\n     * Оставшиеся минуты: получаем оставшиеся минуты и делим их на количество\n     * миллисекунд в одной минуте (1000 * 60 = миллисекунды * секунды)\n     */\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n\n    /*\n     * Оставшиеся секунды: получаем оставшиеся секунды и делим их на количество\n     * миллисекунд в одной секунде (1000)\n     */\n    const secs = Math.floor((time % (1000 * 60)) / 1000);\n  }\n}\nconst date = new Date('Jul 17, 2019');\nconsole.log(date);\n\nconst timerId = setInterval(timeactive, 1000);\n\nfunction timeactive() {\n  refs.secs.parentNode.classList.add('field_click');\n  const timerTick = setTimeout(timeOutTick, 150);\n  function timeOutTick() {\n    clearTimeout(timerTick);\n    refs.secs.parentNode.classList.remove('field_click');\n  }\n}\n","import './sass/main.scss';\nimport './js/timer.js';\n"]}