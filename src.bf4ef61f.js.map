{"version":3,"sources":["js/timer.js","index.js"],"names":["refs","body","document","querySelector","data","start","timerBox","formBox","CountdownTimer","constructor","setTime","selector","time","targetDate","getTime","timerRefs","days","hours","mins","secs","started","timerId","changeTime","oldvalues","MutationObserver","e","console","log","newValue","Date","now","updateTime","currentTime","pad","Math","floor","getValue","innerHTML","timeactive","parentNode","classList","add","timerTick","setTimeout","timeOutTick","clearTimeout","remove","clearInterval","value","String","padStart","setInterval","timer","setAttribute","valueAsNumber","addEventListener","changeData","removeAttribute","removeEventListener"],"mappings":"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","file":"src.bf4ef61f.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  body: document.querySelector('body'),\n  data: document.querySelector('[data-value=\"data\"]'),\n  start: document.querySelector('[data-action=\"start\"]'),\n  timerBox: document.querySelector('.timer__box'),\n  formBox: document.querySelector('.form-box'),\n};\n\nclass CountdownTimer {\n  constructor(setTime) {\n    const selector = setTime.selector;\n    const time = setTime.targetDate.getTime();\n    const timerRefs = {\n      days: document.querySelector(`${selector}`).querySelector('[data-value=\"days\"]'),\n      hours: document.querySelector(`${selector}`).querySelector('[data-value=\"hours\"]'),\n      mins: document.querySelector(`${selector}`).querySelector('[data-value=\"mins\"]'),\n      secs: document.querySelector(`${selector}`).querySelector('[data-value=\"secs\"]'),\n    };\n    let started = false; //started timer\n    let timerId = null;\n    let changeTime = null;\n    const oldvalues = {};\n    function start() {\n      if (!started) {\n        timerId = setInterval(newValue, 1000);\n        started = true;\n        return;\n      }\n    }\n\n    const observer = new MutationObserver(e => console.log(e));\n    function newValue() {\n      if (Date.now() < time) {\n        changeTime = time - Date.now();\n        // console.log(changeTime); //==============change time\n        updateTime(changeTime);\n        return;\n      }\n      clearInterval(timerId);\n      started = false;\n      // console.log('timer-stop', `${time}`);\n      return;\n    }\n    function pad(value) {\n      return String(value).padStart(2, '0');\n    }\n    function updateTime(currentTime) {\n      //formatting UNIX time to dd.. hh mm ss\n      const days = pad(Math.floor(currentTime / (1000 * 60 * 60 * 24)));\n      const hours = pad(Math.floor((currentTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n      const mins = pad(Math.floor((currentTime % (1000 * 60 * 60)) / (1000 * 60)));\n      const secs = pad(Math.floor((currentTime % (1000 * 60)) / 1000));\n      getValue(days, hours, mins, secs);\n      timeactive(days, hours, mins, secs);\n\n      observer;\n    }\n    function getValue(days, hours, mins, secs) {\n      timerRefs.days.innerHTML = days;\n      timerRefs.hours.innerHTML = hours;\n      timerRefs.mins.innerHTML = mins;\n      timerRefs.secs.innerHTML = secs;\n    }\n\n    function timeactive(days, hours, mins, secs) {\n      //add and remove active class (.field_click) to changed field\n      if (days !== oldvalues.days) {\n        timerRefs.days.parentNode.classList.add('field_click');\n        const timerTick = setTimeout(timeOutTick, 150);\n        function timeOutTick() {\n          clearTimeout(timerTick);\n          timerRefs.days.parentNode.classList.remove('field_click');\n        }\n      }\n      if (hours !== oldvalues.hours) {\n        timerRefs.hours.parentNode.classList.add('field_click');\n        const timerTick = setTimeout(timeOutTick, 150);\n        function timeOutTick() {\n          clearTimeout(timerTick);\n          timerRefs.hours.parentNode.classList.remove('field_click');\n        }\n      }\n      if (mins !== oldvalues.mins) {\n        timerRefs.mins.parentNode.classList.add('field_click');\n        const timerTick = setTimeout(timeOutTick, 150);\n        function timeOutTick() {\n          clearTimeout(timerTick);\n          timerRefs.mins.parentNode.classList.remove('field_click');\n        }\n      }\n      if (secs !== oldvalues.secs) {\n        timerRefs.secs.parentNode.classList.add('field_click');\n        const timerTick = setTimeout(timeOutTick, 150);\n        function timeOutTick() {\n          clearTimeout(timerTick);\n          timerRefs.secs.parentNode.classList.remove('field_click');\n        }\n      }\n\n      oldvalues.days = days;\n      oldvalues.hours = hours;\n      oldvalues.mins = mins;\n      oldvalues.secs = secs;\n    }\n    start();\n  }\n}\n\nfunction timer() {\n  let started = false; //is started\n\n  refs.data.addEventListener('change', changeData);\n\n  function changeData() {\n    //action to change data in form\n    if (Date.now() < refs.data.valueAsNumber) {\n      //comparing two dates(now and input)\n      refs.start.removeAttribute('disabled');\n      refs.start.addEventListener('click', start);\n      return;\n    }\n    refs.start.setAttribute('disabled', true);\n    refs.start.removeEventListener('click', start);\n  }\n\n  function start() {\n    if (!started) {\n      started = true;\n      refs.timerBox.classList.remove('is-hide');\n      refs.formBox.classList.add('is-hide');\n      refs.start.setAttribute('disabled', true);\n      //=========of class\n      new CountdownTimer({\n        selector: '#timer-1',\n        targetDate: new Date(refs.data.valueAsNumber),\n      });\n      //=========of class\n    }\n  }\n  function initPage() {\n    //start settings on download page\n    refs.start.setAttribute('disabled', true);\n  }\n\n  initPage(); //set start settings on download page\n}\n\ntimer(); //start script.\n","import './sass/main.scss';\nimport './js/timer.js';\n"]}