{"version":3,"sources":["js/timer.js","index.js"],"names":["refs","body","document","querySelector","data","start","timerBox","formBox","CountdownTimer","constructor","setTime","selector","time","targetDate","getTime","timerRefs","days","hours","mins","secs","started","timerId","changeTime","oldvalues","nowDate","Date","now","setInterval","newValue","updateTime","clearInterval","pad","value","String","padStart","getValue","innerHTML","timeactive","adaptiveList","rel","parentNode","classList","add","timerTick","setTimeout","timeOutTick","clearTimeout","remove","currentTime","Math","floor","timer","isHiddenReplacer","setAttribute","valueAsNumber","addEventListener","changeData","removeAttribute","removeEventListener"],"mappings":";;;AAAA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,KAAMF,SAASC,cAAc,uBAC7BE,MAAOH,SAASC,cAAc,yBAC9BG,SAAUJ,SAASC,cAAc,eACjCI,QAASL,SAASC,cAAc,cAGlC,MAAMK,EACJC,YAAYC,GACLC,KAAAA,SAAWD,EAAQC,SACnBC,KAAAA,KAAOF,EAAQG,WAAWC,UAC1BC,KAAAA,UAAY,CACfC,KAAMd,SAASC,iBAAiB,KAAKQ,YAAYR,cAAc,uBAC/Dc,MAAOf,SAASC,iBAAiB,KAAKQ,YAAYR,cAAc,wBAChEe,KAAMhB,SAASC,iBAAiB,KAAKQ,YAAYR,cAAc,uBAC/DgB,KAAMjB,SAASC,iBAAiB,KAAKQ,YAAYR,cAAc,wBAE5DiB,KAAAA,SAAU,EACVC,KAAAA,QAAU,KACVC,KAAAA,WAAa,KACbC,KAAAA,UAAY,GACZC,KAAAA,QAAUC,KAAKC,MACfrB,KAAAA,QAGPA,QACM,IAAC,KAAKe,QAKR,OAJKC,KAAAA,QAAUM,YAAY,KACpBC,KAAAA,YACJ,UACER,KAAAA,SAAU,GAInBQ,WACMH,GAAAA,KAAKC,MAAQ,KAAKd,KAIpB,OAHKU,KAAAA,WAAa,KAAKV,KAAOa,KAAKC,WAE9BG,KAAAA,WAAW,KAAKP,YAGvBQ,cAAc,KAAKT,SACdD,KAAAA,SAAU,EAIjBW,IAAIC,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCC,SAASnB,EAAMC,EAAOC,EAAMC,GACrBJ,KAAAA,UAAUC,KAAKoB,UAAYpB,EAC3BD,KAAAA,UAAUE,MAAMmB,UAAYnB,EAC5BF,KAAAA,UAAUG,KAAKkB,UAAYlB,EAC3BH,KAAAA,UAAUI,KAAKiB,UAAYjB,EAGlCkB,WAAWrB,EAAMC,EAAOC,EAAMC,GAExBH,IAAS,KAAKO,UAAUP,MACrBsB,KAAAA,aAAa,KAAKvB,UAAUC,MAE/BC,IAAU,KAAKM,UAAUN,OACtBqB,KAAAA,aAAa,KAAKvB,UAAUE,OAE/BC,IAAS,KAAKK,UAAUL,MACrBoB,KAAAA,aAAa,KAAKvB,UAAUG,MAE/BC,IAAS,KAAKI,UAAUJ,MACrBmB,KAAAA,aAAa,KAAKvB,UAAUI,MAG9BI,KAAAA,UAAUP,KAAOA,EACjBO,KAAAA,UAAUN,MAAQA,EAClBM,KAAAA,UAAUL,KAAOA,EACjBK,KAAAA,UAAUJ,KAAOA,EAGxBmB,aAAaC,GAEXA,EAAIC,WAAWC,UAAUC,IAAI,eACvBC,MAAAA,EAAYC,WACTC,WACPC,aAAaH,GACbJ,EAAIC,WAAWC,UAAUM,OAAO,gBAHQ,KAO5ClB,WAAWmB,GAEHhC,MAAAA,EAAO,KAAKe,IAAIkB,KAAKC,MAAMF,EAAe,QAC1C/B,EAAQ,KAAKc,IAAIkB,KAAKC,MAAOF,EAAe,MAAyB,OACrE9B,EAAO,KAAKa,IAAIkB,KAAKC,MAAOF,EAAe,KAAoB,MAC/D7B,EAAO,KAAKY,IAAIkB,KAAKC,MAAOF,EAAe,IAAc,MAC1Db,KAAAA,SAASnB,EAAMC,EAAOC,EAAMC,GAC5BkB,KAAAA,WAAWrB,EAAMC,EAAOC,EAAMC,IAIvC,SAASgC,IACH/B,IAAAA,GAAU,EAgBLf,SAAAA,IAcA+C,IAAiBV,EAbnBtB,IACHA,GAAU,EAYYsB,EAXL1C,EAAKO,QAASP,EAAKM,SAY/BmC,UAAUM,OAAO,WACxBL,EAAID,UAAUC,IAAI,WAZhB1C,EAAKK,MAAMgD,aAAa,YAAY,GAEhC7C,IAAAA,EAAe,CACjBG,SAAU,WACVE,WAAY,IAAIY,KAAKzB,EAAKI,KAAKkD,kBAtBrCtD,EAAKI,KAAKmD,iBAAiB,SAElBC,WAEH/B,GAAAA,KAAKC,MAAQ1B,EAAKI,KAAKkD,cAIzB,OAFAtD,EAAKK,MAAMoD,gBAAgB,iBAC3BzD,EAAKK,MAAMkD,iBAAiB,QAASlD,GAGvCL,EAAKK,MAAMgD,aAAa,YAAY,GACpCrD,EAAKK,MAAMqD,oBAAoB,QAASrD,KAwBxCL,EAAKK,MAAMgD,aAAa,YAAY,GAMxCF;;AC/IA,aADA,QAAA,oBACA,QAAA","file":"src.5747d02b.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  body: document.querySelector('body'),\n  data: document.querySelector('[data-value=\"data\"]'),\n  start: document.querySelector('[data-action=\"start\"]'),\n  timerBox: document.querySelector('.timer__box'),\n  formBox: document.querySelector('.form-box'),\n};\n\nclass CountdownTimer {\n  constructor(setTime) {\n    this.selector = setTime.selector;\n    this.time = setTime.targetDate.getTime();\n    this.timerRefs = {\n      days: document.querySelector(`${this.selector}`).querySelector('[data-value=\"days\"]'),\n      hours: document.querySelector(`${this.selector}`).querySelector('[data-value=\"hours\"]'),\n      mins: document.querySelector(`${this.selector}`).querySelector('[data-value=\"mins\"]'),\n      secs: document.querySelector(`${this.selector}`).querySelector('[data-value=\"secs\"]'),\n    };\n    this.started = false; //started timer\n    this.timerId = null;\n    this.changeTime = null;\n    this.oldvalues = {};\n    this.nowDate = Date.now();\n    this.start();\n  }\n\n  start() {\n    if (!this.started) {\n      this.timerId = setInterval(() => {\n        this.newValue();\n      }, 1000);\n      this.started = true;\n      return;\n    }\n  }\n  newValue() {\n    if (Date.now() < this.time) {\n      this.changeTime = this.time - Date.now();\n      // console.log(this.changeTime); //==============change time\n      this.updateTime(this.changeTime);\n      return;\n    }\n    clearInterval(this.timerId);\n    this.started = false;\n    // console.log('timer-stop', `${this.time}`);\n    return;\n  }\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  getValue(days, hours, mins, secs) {\n    this.timerRefs.days.innerHTML = days;\n    this.timerRefs.hours.innerHTML = hours;\n    this.timerRefs.mins.innerHTML = mins;\n    this.timerRefs.secs.innerHTML = secs;\n  }\n\n  timeactive(days, hours, mins, secs) {\n    //checker changes values\n    if (days !== this.oldvalues.days) {\n      this.adaptiveList(this.timerRefs.days);\n    }\n    if (hours !== this.oldvalues.hours) {\n      this.adaptiveList(this.timerRefs.hours);\n    }\n    if (mins !== this.oldvalues.mins) {\n      this.adaptiveList(this.timerRefs.mins);\n    }\n    if (secs !== this.oldvalues.secs) {\n      this.adaptiveList(this.timerRefs.secs);\n    }\n\n    this.oldvalues.days = days;\n    this.oldvalues.hours = hours;\n    this.oldvalues.mins = mins;\n    this.oldvalues.secs = secs;\n  }\n\n  adaptiveList(rel) {\n    //add and remove active class (.field_click)\n    rel.parentNode.classList.add('field_click');\n    const timerTick = setTimeout(timeOutTick, 150);\n    function timeOutTick() {\n      clearTimeout(timerTick);\n      rel.parentNode.classList.remove('field_click');\n    }\n  }\n\n  updateTime(currentTime) {\n    //formatting UNIX time to dd.. hh mm ss\n    const days = this.pad(Math.floor(currentTime / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((currentTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((currentTime % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((currentTime % (1000 * 60)) / 1000));\n    this.getValue(days, hours, mins, secs);\n    this.timeactive(days, hours, mins, secs);\n  }\n}\n\nfunction timer() {\n  let started = false; //is started\n\n  refs.data.addEventListener('change', changeData);\n\n  function changeData() {\n    //action to change data in form\n    if (Date.now() < refs.data.valueAsNumber) {\n      //comparing two dates(now and input)\n      refs.start.removeAttribute('disabled');\n      refs.start.addEventListener('click', start);\n      return;\n    }\n    refs.start.setAttribute('disabled', true);\n    refs.start.removeEventListener('click', start);\n  }\n\n  function start() {\n    if (!started) {\n      started = true;\n      isHiddenReplacer(refs.formBox, refs.timerBox);\n      refs.start.setAttribute('disabled', true);\n      //=========of class\n      new CountdownTimer({\n        selector: '#timer-1',\n        targetDate: new Date(refs.data.valueAsNumber),\n      });\n      //=========of class\n    }\n  }\n\n  function isHiddenReplacer(add, remove) {\n    remove.classList.remove('is-hide');\n    add.classList.add('is-hide');\n  }\n\n  function initPage() {\n    //start settings on download page\n    refs.start.setAttribute('disabled', true);\n  }\n\n  initPage(); //set start settings on download page\n}\n\ntimer(); //start script.\n","import './sass/main.scss';\nimport './js/timer.js';\n"]}